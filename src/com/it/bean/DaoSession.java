package com.it.bean;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.it.bean.UserInfo;
import com.it.bean.MyTreasure;
import com.it.bean.TreasureMaterialClassify;
import com.it.bean.ContentInfo;
import com.it.bean.MyCollectTreasure;
import com.it.bean.MyCollectContent;
import com.it.bean.MySystemNotice;
import com.it.bean.MyFootprints;
import com.it.bean.RTreasureComment;
import com.it.bean.MyAppraisalTreasure;
import com.it.bean.SuggestionInfo;

import com.it.bean.UserInfoDao;
import com.it.bean.MyTreasureDao;
import com.it.bean.TreasureMaterialClassifyDao;
import com.it.bean.ContentInfoDao;
import com.it.bean.MyCollectTreasureDao;
import com.it.bean.MyCollectContentDao;
import com.it.bean.MySystemNoticeDao;
import com.it.bean.MyFootprintsDao;
import com.it.bean.RTreasureCommentDao;
import com.it.bean.MyAppraisalTreasureDao;
import com.it.bean.SuggestionInfoDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig userInfoDaoConfig;
    private final DaoConfig myTreasureDaoConfig;
    private final DaoConfig treasureMaterialClassifyDaoConfig;
    private final DaoConfig contentInfoDaoConfig;
    private final DaoConfig myCollectTreasureDaoConfig;
    private final DaoConfig myCollectContentDaoConfig;
    private final DaoConfig mySystemNoticeDaoConfig;
    private final DaoConfig myFootprintsDaoConfig;
    private final DaoConfig rTreasureCommentDaoConfig;
    private final DaoConfig myAppraisalTreasureDaoConfig;
    private final DaoConfig suggestionInfoDaoConfig;

    private final UserInfoDao userInfoDao;
    private final MyTreasureDao myTreasureDao;
    private final TreasureMaterialClassifyDao treasureMaterialClassifyDao;
    private final ContentInfoDao contentInfoDao;
    private final MyCollectTreasureDao myCollectTreasureDao;
    private final MyCollectContentDao myCollectContentDao;
    private final MySystemNoticeDao mySystemNoticeDao;
    private final MyFootprintsDao myFootprintsDao;
    private final RTreasureCommentDao rTreasureCommentDao;
    private final MyAppraisalTreasureDao myAppraisalTreasureDao;
    private final SuggestionInfoDao suggestionInfoDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        userInfoDaoConfig = daoConfigMap.get(UserInfoDao.class).clone();
        userInfoDaoConfig.initIdentityScope(type);

        myTreasureDaoConfig = daoConfigMap.get(MyTreasureDao.class).clone();
        myTreasureDaoConfig.initIdentityScope(type);

        treasureMaterialClassifyDaoConfig = daoConfigMap.get(TreasureMaterialClassifyDao.class).clone();
        treasureMaterialClassifyDaoConfig.initIdentityScope(type);

        contentInfoDaoConfig = daoConfigMap.get(ContentInfoDao.class).clone();
        contentInfoDaoConfig.initIdentityScope(type);

        myCollectTreasureDaoConfig = daoConfigMap.get(MyCollectTreasureDao.class).clone();
        myCollectTreasureDaoConfig.initIdentityScope(type);

        myCollectContentDaoConfig = daoConfigMap.get(MyCollectContentDao.class).clone();
        myCollectContentDaoConfig.initIdentityScope(type);

        mySystemNoticeDaoConfig = daoConfigMap.get(MySystemNoticeDao.class).clone();
        mySystemNoticeDaoConfig.initIdentityScope(type);

        myFootprintsDaoConfig = daoConfigMap.get(MyFootprintsDao.class).clone();
        myFootprintsDaoConfig.initIdentityScope(type);

        rTreasureCommentDaoConfig = daoConfigMap.get(RTreasureCommentDao.class).clone();
        rTreasureCommentDaoConfig.initIdentityScope(type);

        myAppraisalTreasureDaoConfig = daoConfigMap.get(MyAppraisalTreasureDao.class).clone();
        myAppraisalTreasureDaoConfig.initIdentityScope(type);

        suggestionInfoDaoConfig = daoConfigMap.get(SuggestionInfoDao.class).clone();
        suggestionInfoDaoConfig.initIdentityScope(type);

        userInfoDao = new UserInfoDao(userInfoDaoConfig, this);
        myTreasureDao = new MyTreasureDao(myTreasureDaoConfig, this);
        treasureMaterialClassifyDao = new TreasureMaterialClassifyDao(treasureMaterialClassifyDaoConfig, this);
        contentInfoDao = new ContentInfoDao(contentInfoDaoConfig, this);
        myCollectTreasureDao = new MyCollectTreasureDao(myCollectTreasureDaoConfig, this);
        myCollectContentDao = new MyCollectContentDao(myCollectContentDaoConfig, this);
        mySystemNoticeDao = new MySystemNoticeDao(mySystemNoticeDaoConfig, this);
        myFootprintsDao = new MyFootprintsDao(myFootprintsDaoConfig, this);
        rTreasureCommentDao = new RTreasureCommentDao(rTreasureCommentDaoConfig, this);
        myAppraisalTreasureDao = new MyAppraisalTreasureDao(myAppraisalTreasureDaoConfig, this);
        suggestionInfoDao = new SuggestionInfoDao(suggestionInfoDaoConfig, this);

        registerDao(UserInfo.class, userInfoDao);
        registerDao(MyTreasure.class, myTreasureDao);
        registerDao(TreasureMaterialClassify.class, treasureMaterialClassifyDao);
        registerDao(ContentInfo.class, contentInfoDao);
        registerDao(MyCollectTreasure.class, myCollectTreasureDao);
        registerDao(MyCollectContent.class, myCollectContentDao);
        registerDao(MySystemNotice.class, mySystemNoticeDao);
        registerDao(MyFootprints.class, myFootprintsDao);
        registerDao(RTreasureComment.class, rTreasureCommentDao);
        registerDao(MyAppraisalTreasure.class, myAppraisalTreasureDao);
        registerDao(SuggestionInfo.class, suggestionInfoDao);
    }
    
    public void clear() {
        userInfoDaoConfig.getIdentityScope().clear();
        myTreasureDaoConfig.getIdentityScope().clear();
        treasureMaterialClassifyDaoConfig.getIdentityScope().clear();
        contentInfoDaoConfig.getIdentityScope().clear();
        myCollectTreasureDaoConfig.getIdentityScope().clear();
        myCollectContentDaoConfig.getIdentityScope().clear();
        mySystemNoticeDaoConfig.getIdentityScope().clear();
        myFootprintsDaoConfig.getIdentityScope().clear();
        rTreasureCommentDaoConfig.getIdentityScope().clear();
        myAppraisalTreasureDaoConfig.getIdentityScope().clear();
        suggestionInfoDaoConfig.getIdentityScope().clear();
    }

    public UserInfoDao getUserInfoDao() {
        return userInfoDao;
    }

    public MyTreasureDao getMyTreasureDao() {
        return myTreasureDao;
    }

    public TreasureMaterialClassifyDao getTreasureMaterialClassifyDao() {
        return treasureMaterialClassifyDao;
    }

    public ContentInfoDao getContentInfoDao() {
        return contentInfoDao;
    }

    public MyCollectTreasureDao getMyCollectTreasureDao() {
        return myCollectTreasureDao;
    }

    public MyCollectContentDao getMyCollectContentDao() {
        return myCollectContentDao;
    }

    public MySystemNoticeDao getMySystemNoticeDao() {
        return mySystemNoticeDao;
    }

    public MyFootprintsDao getMyFootprintsDao() {
        return myFootprintsDao;
    }

    public RTreasureCommentDao getRTreasureCommentDao() {
        return rTreasureCommentDao;
    }

    public MyAppraisalTreasureDao getMyAppraisalTreasureDao() {
        return myAppraisalTreasureDao;
    }

    public SuggestionInfoDao getSuggestionInfoDao() {
        return suggestionInfoDao;
    }

}
